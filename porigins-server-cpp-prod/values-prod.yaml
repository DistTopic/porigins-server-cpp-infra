# Production environment values for porigins-server-cpp
porigins-server-cpp:
  replicaCount: 2
  
  image:
    repository: ghcr.io/disttopic/porigins-server-cpp
    tag: "stable"
    pullPolicy: IfNotPresent
  
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
  
  # Ingress configuration for Traefik
  ingress:
    enabled: true
    className: "traefik"
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      traefik.ingress.kubernetes.io/router.tls: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: game.porigins.org
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: game-porigins-org-tls
        hosts:
          - game.porigins.org
    
  server:
    worldName: "gold"
    serverName: "Porigins Server"
    motd: "Welcome to Porigins Server! Enjoy your adventure!"
    ownerEmail: "admin@porigins.com"
    url: "https://porigins.com"
    
    # Balanced rates for production
    rates:
      experience: 1.0
      skill: 1.0
      magic: 1.0
      loot: 1.0
  
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
    
  persistence:
    size: 50Gi
    storageClass: "gp3"
    
  mysql:
    enabled: false  # Using external database
    
  # External database configuration using existing cluster secrets
  externalDatabase:
    enabled: true
    # Use existing secret from cluster database namespace
    existingSecret: "mysql-secret"
    existingSecretNamespace: "database"
    hostKey: "mysql-host"
    portKey: "mysql-port"
    databaseKey: "mysql-database"
    usernameKey: "mysql-user"
    passwordKey: "mysql-password"
    
    # Direct connection values (non-sensitive)
    host: "mysql.database.svc.cluster.local"
    port: 3306
    database: "porigins-database"
      
  # Production-specific node selection
  nodeSelector:
    node-type: "game-server"
    
  # Ensure pods are spread across different nodes
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - porigins-server-cpp
          topologyKey: kubernetes.io/hostname
